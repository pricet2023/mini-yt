version: "3.8"
services:
  frontend:
    build: ./frontend 
    container_name: nextjs-app
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/youtube_clone
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=videos
    depends_on:
      - db
      - elasticsearch
      - minio
      - apache
    networks:
      - appnet

  # PostgreSQL DB for storing video metadata
  db:
    image: postgres:14.1-alpine
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=youtube_clone
    ports:
      - '5432:5432'
    volumes: 
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data
    networks:
      - appnet   
    
  # Minio S3 server for object storage
  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./minio-data:/data
    networks:
      - appnet
  
  # Apache server in front of minio
  apache:
    image: httpd:2.4
    container_name: apache
    ports:
      - "9000:80"   # expose Apache on localhost:9000
    volumes:
      - ./apache.conf:/usr/local/apache2/conf/httpd.conf:ro
    depends_on:
      - minio
    networks:
      - appnet    

  
  # Creates bucket in minio
  createbuckets:
    image: minio/mc
    container_name: createbuckets
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (mc alias set local http://minio:9000 minioadmin minioadmin) do echo '...waiting...' && sleep 1; done &&
      mc mb local/videos || true &&
      mc policy set public local/videos
      "
    networks:
      - appnet

  # Elastic search node for providing very fast search results
  elasticsearch:
    image: elasticsearch:9.1.4
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - appnet
  # ES setup for configuring the index
  es-setup:
    image: curlimages/curl:8.5.0
    container_name: es-setup
    depends_on:
      - elasticsearch
    entrypoint: >
      sh -c "
        echo 'Waiting for Elasticsearch...';
        until curl -s http://elasticsearch:9200 >/dev/null; do sleep 2; done;
        echo 'Creating index...';
        curl -X PUT http://elasticsearch:9200/videos
          -H 'Content-Type: application/json'
          -d @/config/videos-index.json;
        echo 'Index created';
      "
    volumes:
      - ./es-config:/config
    networks:
      - appnet

volumes:
  pgdata:
    driver: local
  esdata:
    driver: local

networks:
  appnet:
    driver: bridge